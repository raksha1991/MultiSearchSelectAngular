!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("rxjs"),require("@angular/material"),require("rxjs/operators"),require("@angular/common")):"function"==typeof define&&define.amd?define("multi-select-search-angular2",["exports","@angular/core","@angular/forms","rxjs","@angular/material","rxjs/operators","@angular/common"],t):t((e=e||self)["multi-select-search-angular2"]={},e.ng.core,e.ng.forms,e.rxjs,e.ng.material,e.rxjs.operators,e.ng.common)}(this,(function(e,t,n,o,i,l,a){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function r(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,i,l=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(o=l.next()).done;)a.push(o.value)}catch(e){i={error:e}}finally{try{o&&!o.done&&(n=l.return)&&n.call(l)}finally{if(i)throw i.error}}return a}var s=function(){function e(){this.searchContrl=new n.FormControl,this.autoCompleteContrl=new n.FormControl,this.selectedOptions$=new o.BehaviorSubject([]),this.autoCompleteData$=new o.BehaviorSubject([]),this.liveChange=new t.EventEmitter}return e.prototype.ngOnInit=function(){var e=this;this.filteredOptions$=o.combineLatest(this.searchContrl.valueChanges.pipe(l.startWith("")),this.autoCompleteData$.pipe(l.startWith([])).pipe(l.distinctUntilChanged((function(e,t){return e.join(",")===t.join(",")})))).pipe(l.map((function(t){var n=r(t,2),o=n[0],i=n[1];return e._filter(o,i)})))},e.prototype.ngOnChanges=function(e){if(e.dataSource.currentValue){var t=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e}(new Set(e.dataSource.currentValue));this.autoCompleteData$.next(t.filter((function(e){return null!==e})))}},e.prototype.clearFilter=function(){this.searchContrl.setValue(""),this.selectedOptions$.next([]),this.liveChange.emit([])},e.prototype.remove=function(e){var t=this.selectedOptionsValue.filter((function(t){return t!==e}));this.selectedOptions$.next(t),this.liveChange.emit(t)},e.prototype.add=function(e){var t=this.selectedOptionsValue;t.push(e),this.selectedOptions$.next(t),this.liveChange.emit(t)},e.prototype.onOptionSelectionChange=function(e){if("All"===e)this.selectedOptionsValue.length===this.autoCompleteData$.getValue().length?this.selectedOptions$.next([]):this.selectedOptions$.next(this.autoCompleteData$.getValue()),this.liveChange.emit(this.selectedOptionsValue);else{var t=e;this.selectedOptionsValue.includes(t)?this.remove(t):this.add(t)}this.searchContrl.setValue(""),this.searchInput.nativeElement.blur(),this.autoComplete.closePanel()},e.prototype._setFocus=function(e){e||this.autoComplete.panelOpen||this.searchContrl.setValue(null)},Object.defineProperty(e.prototype,"selectedOptionsValue",{get:function(){return this.selectedOptions$.getValue()},enumerable:!0,configurable:!0}),e.prototype._filter=function(e,t){var n=this,o=t;if(this.selectedOptionsValue.length){var i=t.filter((function(e){return n.selectedOptionsValue.includes(e)})),l=t.filter((function(e){return!i.includes(e)}));o=i.concat(l)}if(e){var a=e.toString().toLowerCase();return o.filter((function(e){return e.toString().toLowerCase().includes(a)}))}return o},e.decorators=[{type:t.Component,args:[{selector:"multi-select-search",template:'<div class="multi-select">\n  <mat-form-field class="multi-select__form-field">\n    <div class="multi-select__text-contianer">\n      <label *ngIf="(selectedOptions$ | async).length > 0" class="mat-body-1">\n        {{(selectedOptions$ | async)[0]}},\n      </label>\n      <span class="mat-body-1" *ngIf="(selectedOptions$ | async).length > 1">\n        (+{{(selectedOptions$ | async).length - 1}})\n      </span>\n    </div>\n    <div>\n        <input matInput #searchInput [formControl]="searchContrl" [matAutocomplete]="auto" (focus)="_setFocus(true)" (blur)="_setFocus(false)">\n    </div>\n    <mat-icon matPrefix color="accent">search</mat-icon>\n    <mat-icon matSuffix color="accent" *ngIf="(selectedOptions$ | async).length" class="multi-select__close-icon" (click)="clearFilter()">\n      close\n    </mat-icon>\n  </mat-form-field>\n  <mat-autocomplete autoActiveFirstOption #auto="matAutocomplete" (optionSelected)="onOptionSelectionChange($event.option.value)">\n      <div class="multi-select__select-all">\n          <mat-checkbox \n          color="primary"\n          [checked]="(selectedOptions$ | async).length == (autoCompleteData$ | async).length"\n          disableRipple=true (change)="onOptionSelectionChange(\'All\')">\n            <span class="mat-caption">select all</span>\n          </mat-checkbox>\n      </div>\n     \n    <mat-option *ngFor="let option of filteredOptions$ | async"\n      [value]="option">\n      <mat-checkbox \n      color="primary"\n      (click)="$event.stopPropagation()"\n      (change)="onOptionSelectionChange(option)"\n      [checked]="(selectedOptions$ | async).includes(option) ? true : false"\n      disableRipple=true>\n      <span class="mat-caption">{{option}}</span>\n      </mat-checkbox> \n      \n    </mat-option>\n  </mat-autocomplete>\n</div>',encapsulation:t.ViewEncapsulation.None,styles:[".multi-select{width:inherit;overflow:hidden}.multi-select__select-all{margin:1rem}.multi-select__close-icon{cursor:pointer}.multi-select__form-field{width:inherit;margin:.5rem 0;background-color:#f9fafc}.multi-select__form-field .mat-form-field-underline{display:none}.multi-select__form-field .mat-form-field-wrapper{padding:0}.multi-select__form-field .mat-form-field-infix{padding:0;border:none;display:flex}.multi-select__form-field .mat-form-field-flex{align-items:center;padding:.07rem}.multi-select__text-contianer{display:flex;max-width:80%}.multi-select__text-contianer span{flex:0 1 auto}.multi-select__text-contianer label{flex:0 1 auto;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={searchInput:[{type:t.ViewChild,args:["searchInput",null]}],autoComplete:[{type:t.ViewChild,args:["searchInput",{read:i.MatAutocompleteTrigger,static:!0}]}],liveChange:[{type:t.Output}],dataSource:[{type:t.Input}]},e}();var c=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[s],imports:[a.CommonModule,i.MatCheckboxModule,i.MatFormFieldModule,i.MatListModule,i.MatInputModule,i.MatAutocompleteModule,n.FormsModule,n.ReactiveFormsModule,i.MatIconModule],exports:[s]}]}],e}();e.MultiSelectSearchAngular2Component=s,e.MultiSelectSearchAngular2Module=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=multi-select-search-angular2.umd.min.js.map